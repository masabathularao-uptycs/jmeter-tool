[all:vars]
ansible_user=$user
sudo_dev_users=yes
MONGO_ADMIN_USER=root
MONGO_ADMIN_PASSWORD=rootpassword
sunode=yes
idp=google
suffix=uptycs.net
spark_data_dir=/data/spark
postgres_uid=1118
postgres_gid=1113
dockerizepsql=yes
use_spark=yes
redis_container=yes
cloud=lab
domain=venus
grafana_port=3000
deploy_ranger=yes
switch_access_control=ranger
presto_ssl=yes
presto_password_access=yes
clusters=clst1
enable_nginx_modsecurity=no
enable_redis_password=yes
ansible_python_interpreter=/usr/bin/python3
unseal_type=local
use_s3_only=yes
s3_ingestion_access_key=minioadmin
s3_ingestion_secret_key=minioadmin
data_archival_endpoint_url=https://minio.uptycs.net:9000
aws_access_key_id=minioadmin 
aws_secret_access_key=minioadmin 
s3_path_style_access=true
docker_image_pull=yes
pull_uptycs_images=yes
#hdfs_ssd_disks=/data/dn_ssd
#use_hdfs_ssd=yes
use_alluxio=yes
deploy_alluxio=yes
kube_cluster=yes
redis_cluster_urls=s3c1pn1v,s3c1pn2v,s3c1pn3v,s3c2pn1v,s3c2pn2v
mongo_data_dir=/data/mongo
run_state_manager=yes
kube_pgbouncer=yes
uptycs_kubernetes=yes
migrate_cluster=yes
kube_clusters=clst1
use_prestogateway=yes
kube_prestogateway=yes
kube_nodeapps=yes


[checksumvalidator]
s3c1pn1

[agentless-terraform-server]
s3c1pn1

[uptycs-support-data-collection]
s3c1pn1

[dedicated_pushgateway]
s3monitor

[nginx]
s3c1pn[1:3]
s3c2pn[1:3]

[kubeworker]
s3monitor

[vault]
s3c1pn1 vault_init=yes
s3c1pn[2:3]
s3c2pn[1:3]

[vaultdb]
s3configdb1

[kafka]
s3c1pn1 brokerid=1
s3c1pn2 brokerid=2
s3c1pn3 brokerid=3
s3c2pn1 brokerid=4
s3c2pn2 brokerid=5
s3c2pn3 brokerid=6

[zookeeper]
s3c1pn[1:3]
s3c2pn[1:3]

[redis]
192.168.135.58
192.168.138.60
192.168.139.60
192.168.140.56
192.168.141.56

[uptycs]
s3c1pn[1:3] computenode=yes excluded_services=rule-engine-bulk-replay
s3c2pn[1:3] computenode=yes excluded_services=rule-engine-bulk-replay
s3c1dn[1:3] datanode=yes
s3c2dn[1:3] datanode=yes sparknode=yes

[metastore]
s3c1dn[1:3]

[cassandra]
s3c1dn[1:3]
s3c2dn[1:3]

[spark]
s3c1dn[1:3] sparkmaster=yes sparkworker=yes spark_worker_memory=71680

[hdfs]
s3c1dn[1:3]

[hdfs_primary]
s3c1dn[1:3]

[hdfs_jn]
s3c1dn[1:3]

[configdb]
s3configdb1 dbrole=master
s3configdb2 dbrole=standby

[statedb]
s3configdb1 dbrole=master
s3configdb2 dbrole=standby

[metastoredb]
s3configdb1 dbrole=master
s3configdb2 dbrole=standby

[mongodb]
s3c1dn1 primary=yes
s3c1dn2 priority=2
s3c1dn3 priority=3

[supportanalytics]
s3c1pn1

[redis_timeseries]
s3c1pn1

[redis_graph]
s3c1pn2

[ranger]
s3c1dn1 rangeradmin=yes
s3c2dn1 rangeradmin=yes

[clst1]
s3c1pn[1:3]
s3c2pn[1:3]
s3c1dn[1:3]
s3c2dn[1:3]
s3configdb1
s3configdb2

[prometheus]
s3monitor ansible_python_interpreter=/usr/bin/python3

[grafana]
s3monitor ansible_python_interpreter=/usr/bin/python3

[alertmgr]
s3monitor ansible_python_interpreter=/usr/bin/python3

[gubernator]
s3c1pn[1:3]

;Seednode are the ones that bootstrap Akka cluster, no need for them to be equal to num of dnodes
;IMP: Lock based compaction/archival has to be shutdown before switching to akka cluster
[orc_compaction]        
s3c1dn[1:3] orc_seed_node=yes

[data_archival]
s3c1dn[1:3] seed_node=yes

[elasticsearch]
s3elasticsearch

[logstash]
s3logstash

[kibana]
s3kibana

[asset_catalog_db]
s3c1dn1

[airflow_redis]
s3c1pn1

[airflowdb]
s3configdb1

[airflow]
s3c1pn1
s3c1pn2 worker=yes
s3c1pn3 worker=yes

[insights_db]
s3c1dn1

[ask_uptycs_server]
s3c1pn[1:3]

[meilisearch]
s3c1pn1

[ask_uptycs_text2sql]
s3c1pn1
s3c1pn[2:3]

[s3spark]                 
s3c2dn[1:3] sparkmaster=yes sparkworker=yes

[alluxio_master]
s3c1pn[1:3]

[alluxio_worker]
s3c1pn[1:3]

[debezium]             
s3configdb1
            
[debezium_statedb]
s3configdb1

[presto]
s3c1dn1 presto_clst=1 coordinator=yes host_memory_mb=160974
s3c1dn2 presto_clst=1 host_memory_mb=160973
s3c1dn3 presto_clst=1 host_memory_mb=160974

[prestosw]
s3c2dn1 presto_clst=2 coordinator=yes host_memory_mb=160973
s3c2dn2 presto_clst=2 host_memory_mb=160973
s3c2dn3 presto_clst=2 host_memory_mb=160973

[prestogateway]
s3c1pn[1:3]
[prestogatewaydb]
s3configdb1

[memgraphdb]
s3configdb1 dbrole=master

[threatdb]
s3configdb1  dbrole=master
s3configdb2  dbrole=standby

[kubemaster]
s3c1pn1 leader=yes
s3c1pn[2:3]


