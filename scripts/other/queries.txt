
query1="SELECT CASE WHEN max(upt_gateway_time) IS NOT NULL THEN to_unixtime (LOCALTIMESTAMP) - to_unixtime (max(upt_gateway_time)) ELSE - 1 END FROM process_open_sockets WHERE upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '14'day, '%Y%m%d') AS INTEGER)"
query2="WITH hmnukujudvtq AS ( WITH assets AS ( SELECT * FROM upt_assets ), detections AS ( SELECT * FROM upt_detections ) SELECT * FROM ( SELECT 'asset_total' AS type , 'total' AS artifact, Count(*) FROM assets UNION SELECT 'os_count' AS type , os_flavor AS artifact, Count(*) FROM assets GROUP BY os_flavor UNION SELECT 'location_count' AS type , location AS artifact , Count(*) FROM assets GROUP BY location UNION SELECT 'asset_status' AS type, 'offline' AS artifact , Count(*) FROM assets WHERE NOT live UNION SELECT 'asset_status' AS type, 'online' AS artifact , Count(*) FROM assets WHERE live UNION SELECT 'os:osquery_verion' AS type, Concat(os,':',osquery_version) AS artifact, Count(*) FROM assets GROUP BY Concat(os,':',osquery_version) UNION SELECT 'assets_count_by_detection_severity' AS type, severity AS artifact, Count(DISTINCT asset_id) FROM detections GROUP BY severity ) ORDER BY type, artifact ) SELECT * FROM hmnukujudvtq LIMIT 500000" 

query3="WITH fddzulrugwpq AS 
( WITH data AS 
 ( select cast(created_at AS date) day, severity, count(*) as count 
  from upt_detections 
  where created_at >= LOCALTIMESTAMP - interval '100' day group by 1,2 ), calendar AS 
 ( SELECT * FROM 
  ( SELECT dt.dt
   FROM UNNEST( sequence ( (current_date - INTERVAL '100' DAY), current_date, INTERVAL '7' DAY ) ) dt (dt) ) calendar CROSS JOIN ( VALUES 'high', 'medium', 'low' ) AS cal(sev) ) SELECT date_format(coalesce(c.dt, d.day), '%m/%d/%y') day, coalesce(c.sev, d.severity) AS severity, coalesce(d.count, 0) AS count FROM data d FULL JOIN calendar c ON d.day = c.dt AND d.severity = c.sev ORDER BY 1 ASC, CASE c.sev WHEN 'high' THEN 1 WHEN 'medium' THEN 2 WHEN 'low' THEN 3 END ) SELECT * FROM fddzulrugwpq LIMIT 500000"

query4="WITH dates as ( SELECT CAST( date_format(date_column, '%Y%m%d') AS INTEGER ) as date_column FROM ( VALUES ( SEQUENCE( current_date - INTERVAL '7' DAY, current_date, INTERVAL '7' DAY ) ) ) AS t1(date_array) CROSS JOIN UNNEST(date_array) AS t2(date_column) ), final_output AS ( select distinct date_column, code, score from upt_events_data, dates qd WHERE upt_events_data.upt_day >= CAST( date_format( current_date - INTERVAL '7' DAY, '%Y%m%d' ) AS INTEGER ) AND upt_events_data.upt_day = date_column AND ( json_extract_scalar(metadata, '$[\"\"accountId\"\"]') IN ('all') OR 'all' IN ('all') ) GROUP BY date_column, code, score ) select d.date_column, SUM(case when code ='UPT_AWS_IAM_4' then score * 1 when code ='UPT_AWS_IAM_13' then score * 1 when code ='UPT_AWS_IAM_2' then score * 2 when code ='AWS_THREAT_PRIV_ESC_3' then score * 1 when code ='CIS_AWS_1.16' then score * 1 when code ='UPT_AWS_IAM_5' then score * 1 else 0 end) as governance_score, SUM(case when code ='CIS_AWS_1.12' then score * 5 when code ='CIS_AWS_1.14' then score * 5 when code ='AWS_ROOT_ACCOUNT_USAGE' then score * 5 when code ='CIS_AWS_1.22' then score * 2 when code ='UPT_AWS_IAM_12' then score * 0.5 when code ='AWS_THREAT_INI_ACC_1' then score * 0.5 when code ='AWS_THREAT_PRIV_ESC_7' then score * 0.5 when code ='AWS_THREAT_PRIV_ESC_2' then score * 0.5 else 0 end) as risk_score from dates d left JOIN final_output fo ON fo.date_column = d.date_column where d.date_column >= CAST( date_format( current_date - INTERVAL '7' DAY, '%Y%m%d' ) AS INTEGER ) and d.date_column < CAST( date_format(current_date, '%Y%m%d') AS INTEGER ) group by d.date_column order by date_column desc"
query5="SELECT CASE WHEN max(upt_gateway_time) IS NOT NULL THEN to_unixtime (LOCALTIMESTAMP) - to_unixtime (max(upt_gateway_time)) ELSE - 1 END FROM process_open_files WHERE upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER)"
query6="WITH data AS (select cast(created_at AS date) day,severity,count(*) as count from upt_detections where created_at >= LOCALTIMESTAMP - interval '7' day group by 1,2),calendar AS (SELECT * FROM (SELECT "dt"."dt" FROM UNNEST( "sequence"( (current_date - INTERVAL '7' DAY), current_date, INTERVAL '7' DAY ) ) dt (dt) ) calendar CROSS JOIN ( VALUES 'high', 'medium', 'low' ) AS cal(sev)  ) SELECT date_format(coalesce(c.dt, d.day), '%m/%d/%y') day, coalesce(c.sev, d.severity) AS severity, coalesce(d.count, 0) AS count FROM data d FULL JOIN calendar c ON d.day = c.dt AND d.severity = c.sev ORDER BY 1 ASC, CASE c.sev WHEN 'high' THEN 1 WHEN 'medium' THEN 2 WHEN 'low' THEN 3 END"
query7="WITH data AS (select cast(created_at AS date) day,severity,count(*) as count from upt_detections where created_at >= LOCALTIMESTAMP - interval '7' day group by 1,2),calendar AS (SELECT * FROM (SELECT "dt"."dt" FROM UNNEST( "sequence"( (current_date - INTERVAL '7' DAY), current_date, INTERVAL '7' DAY ) ) dt (dt) ) calendar CROSS JOIN ( VALUES 'high', 'medium', 'low' ) AS cal(sev)  ) SELECT date_format(coalesce(c.dt, d.day), '%m/%d/%y') day, coalesce(c.sev, d.severity) AS severity, coalesce(d.count, 0) AS count FROM data d FULL JOIN calendar c ON d.day = c.dt AND d.severity = c.sev ORDER BY 1 ASC, CASE c.sev WHEN 'high' THEN 1 WHEN 'medium' THEN 2 WHEN 'low' THEN 3 END"
query8="SELECT CASE WHEN max(upt_gateway_time) IS NOT NULL THEN to_unixtime (LOCALTIMESTAMP) - to_unixtime (max(upt_gateway_time)) ELSE - 1 END FROM dns_lookup_events WHERE upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '14'day, '%Y%m%d') AS INTEGER)"
query9="select count(DISTINCT upt_asset_id) from load_average where upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER)"
query10="SELECT to_unixtime(MAX(upt_server_time))-to_unixtime(MAX(upt_gateway_time)) AS ProcessLatency FROM processes WHERE upt_day >=CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER)"
query11="select date_diff('second',upt_gateway_time,upt_server_time) from process_open_sockets where upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER) order by upt_server_time desc limit 1  "
query12="SELECT max(upt_gateway_time) AS LatestRecord FROM processes WHERE upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER)"
query13="SELECT CASE WHEN max(upt_gateway_time) IS NOT NULL THEN to_unixtime (LOCALTIMESTAMP) - to_unixtime (max(upt_gateway_time)) ELSE - 1 END FROM socket_events WHERE upt_day >= CAST(date_format (CURRENT_DATE - INTERVAL '7'day, '%Y%m%d') AS INTEGER)"
query14="SELECT upt_time,pid,name,path,upt_hostname FROM processes where upt_day>20220525 LIMIT 1000"
query15="SELECT MAX(updated_at) AS LatestAlert FROM upt_alerts"


query14Æ"WITH data AS (select cast(created_at AS date) day,severity,count(*) as count from upt_detections where created_at >= LOCALTIMESTAMP - interval '7' day group by 1,2),calendar AS (SELECT * FROM (SELECT "dt"."dt" FROM UNNEST( "sequence"( (current_date - INTERVAL '7' DAY), current_date, INTERVAL '7' DAY ) ) dt (dt) ) calendar CROSS JOIN ( VALUES 'high', 'medium', 'low' ) AS cal(sev)  ) SELECT date_format(coalesce(c.dt, d.day), '%m/%d/%y') day, coalesce(c.sev, d.severity) AS severity, coalesce(d.count, 0) AS count FROM data d FULL JOIN calendar c ON d.day = c.dt AND d.severity = c.sev ORDER BY 1 ASC, CASE c.sev WHEN 'high' THEN 1 WHEN 'medium' THEN 2 WHEN 'low' THEN 3 END"
query15Æ"WITH data AS (select cast(created_at AS date) day,severity,count(*) as count from upt_detections where created_at >= LOCALTIMESTAMP - interval '7' day group by 1,2),calendar AS (SELECT * FROM (SELECT "dt"."dt" FROM UNNEST( "sequence"( (current_date - INTERVAL '7' DAY), current_date, INTERVAL '7' DAY ) ) dt (dt) ) calendar CROSS JOIN ( VALUES 'high', 'medium', 'low' ) AS cal(sev)  ) SELECT date_format(coalesce(c.dt, d.day), '%m/%d/%y') day, coalesce(c.sev, d.severity) AS severity, coalesce(d.count, 0) AS count FROM data d FULL JOIN calendar c ON d.day = c.dt AND d.severity = c.sev ORDER BY 1 ASC, CASE c.sev WHEN 'high' THEN 1 WHEN 'medium' THEN 2 WHEN 'low' THEN 3 END"
